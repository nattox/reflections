What happens when you initialize a repository? Why do you need to do it?

When I initialize a repository, a new git file begins. It will now be able to
track the changes I make as I develop and change files. I need to do it
because it will make looking through versions of my files possible.
It will also allow me to collaborate much better.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

A staging area is for the assembly and grouping of files before they are
combined into a repository. By putting them together into a set, I can organize
my files logically over time and by their relationship to each other.

How can you use the staging area to make sure you have one commit per logical
change?

By only packaging related files into the commit, I can make sure that the
staging area has only files related to a logical commit. I can also look
at the git status to see what's in the staging area before committing.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

In times where I am changing more than one variable at the same time in my
development. An example of this would be adding two different features at
the same time, or working in tandem with another person who is doing that.

By branching, we can each experiment, develop, and keep moving along
without worrying about creating bugs to the master commit with more
experimental features.

How do the diagrams help you visualize the branch structure?

By giving the abstract structure of the git structure a visual component
that is easier for me to understand, trace, and internalize. It lets
my mind map the commits as they are happening in a way that feels more
real to my mind. Visualizing in addition to understanding in an abstract form
gives me two ways by which to understand. 

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?
